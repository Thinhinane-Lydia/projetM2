 

const CartItem = require("../model/CartItem");

// üìå Ajouter un produit au panier (sans gestion de quantit√©)
exports.addToCart = async (req, res) => {
  const { productId } = req.body;
  try {
    // V√©rifier si le produit existe d√©j√† dans le panier
    let cartItem = await CartItem.findOne({ user: req.user._id, product: productId });
    
    if (cartItem) {
      // Si le produit existe d√©j√†, on ne fait rien et on renvoie l'article existant
      res.status(200).json(cartItem);
    } else {
      // Si le produit n'existe pas, on le cr√©e sans quantit√©
      cartItem = new CartItem({ user: req.user._id, product: productId });
      await cartItem.save();
      res.status(201).json(cartItem);
    }
    
  } catch (error) {
    res.status(500).json({ message: "Erreur serveur", error });
  }
};

// üìå R√©cup√©rer les articles du panier
exports.getCart = async (req, res) => {
  try {
    const cartItems = await CartItem.find({ user: req.user._id }).populate("product");
    res.status(200).json(cartItems);
  } catch (error) {
    res.status(500).json({ message: "Erreur serveur", error });
  }
};

// üìå Nous n'avons plus besoin de modifier la quantit√©, cette fonction peut √™tre supprim√©e
// ou conserv√©e pour une future utilisation, mais sans la logique de quantit√©
exports.updateCartItem = async (req, res) => {
  try {
    const cartItem = await CartItem.findById(req.params.id);
    if (!cartItem) return res.status(404).json({ message: "Article non trouv√©" });
    
    // Plus de mise √† jour de quantit√© ici
    await cartItem.save();
    
    res.status(200).json(cartItem);
  } catch (error) {
    res.status(500).json({ message: "Erreur serveur", error });
  }
};

// üìå Supprimer un produit du panier
exports.removeFromCart = async (req, res) => {
  try {
    const cartItem = await CartItem.findOneAndDelete({
      user: req.user._id,
      _id: req.params.id,
    });
    if (!cartItem) {
      return res.status(404).json({ message: "Article introuvable dans le panier" });
    }
    res.status(200).json({ message: "Article supprim√© du panier" });
  } catch (error) {
    res.status(500).json({ message: "Erreur serveur", error });
  }
};
