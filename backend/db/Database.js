// const mongoose = require("mongoose");

// const connectDatabase = () => {
//   mongoose
//     .connect(process.env.DB_URL, {
//       useNewUrlParser: true,
//       useUnifiedTopology: true,
//     })
//     .then((data) => {
//       console.log(`mongod connected with server: ${data.connection.host}`);
//     });
// };
// mongoose.connection.on("error", (err) => {
//   console.error("‚ùå Erreur MongoDB :", err);
// });


// module.exports = connectDatabase;const mongoose = require("mongoose");

// Fonction pour connecter la base de donn√©es MongoDB
const mongoose = require("mongoose");

// Fonction pour connecter la base de donn√©es MongoDB
const connectDatabase = () => {
    mongoose
        .connect(process.env.DB_URL, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
            retryWrites: true, // ‚úÖ Active les retries automatiques
            w: "majority", // ‚úÖ Meilleure gestion des conflits en cluster
        })
        .then((data) => {
            console.log(`‚úÖ MongoDB connect√© sur : ${data.connection.host}`);
        })
        .catch((err) => {
            console.error("‚ùå Erreur de connexion MongoDB :", err);
            process.exit(1); // üî¥ Quitte l'application si la connexion √©choue
        });
};

// üîπ G√©rer les erreurs MongoDB globalement
mongoose.connection.on("error", (err) => {
    console.error("‚ùå Erreur MongoDB d√©tect√©e :", err);
});

// üîπ D√©tecter les d√©connexions et essayer de reconnecter
mongoose.connection.on("disconnected", () => {
    console.warn("‚ö† MongoDB d√©connect√© ! Reconnexion en cours...");
    setTimeout(connectDatabase, 5000); // ‚è≥ Tentative de reconnexion apr√®s 5 secondes
});

module.exports = connectDatabase;
